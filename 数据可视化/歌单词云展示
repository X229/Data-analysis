import requests
import sys
import re
import os
import requests
import jieba
from wordcloud import WordCloud
import matplotlib.pyplot as plt
from lxml import etree

headers={
	'Referer'   :'https://music.163.com/',
	'Host'      :'music.163.com',
	'Accept'    :'ext/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3',
	'User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.120 Safari/537.36'
	}

# 得到指定歌单页面的 全部歌曲的歌曲ID，歌曲名
def get_songs(playlist_id):
	page_url = 'http://music.163.com/api/playlist/detail?id=' + playlist_id
	# 获取网页HTML
	res = requests.request('GET', page_url, headers=headers)
	# 输出歌单中歌曲数量
	print(len(res.json()['result']['tracks']))

	# 设置热门歌曲的ID，歌曲名称
	song_ids = []
	song_names = []

	for i in range(len(res.json()['result']['tracks'])):
		names = res.json()['result']['tracks'][i]['name']
		ids = res.json()['result']['tracks'][i]['id']
		song_names.append(names)
		song_ids.append(ids)
		print(names, ' ', ids)
	return song_names, song_ids


# 得到某一首歌的歌词
def get_song_lyric(headers, lyric_url):
	res = requests.request('GET', lyric_url, headers=headers)
	if 'lrc' in res.json():
		lyric = res.json()['lrc']['lyric']
		new_lyric = re.sub(r'[\d:.[\]]', '', lyric)
		return new_lyric
	else:
		return ''
		print(res.json())

# 去掉停用词
def remove_stop_words(f):
    stop_words = ['作词', '作曲', '编曲', 'Arranger', '录音', '人声', 'Vocal',
                  '弦乐', 'Keyboard', '键盘', '编辑', '助理', 'Assistants',
                  'Mixing', 'Editing', 'Recording', '音乐', '制作', 'Producer',
                  '发行', 'produced', 'and', 'distributed']
    for stop_word in stop_words:
        f = f.replace(stop_word, '')
    return f

# 生成词云
def create_word_cloud(f):
	print('根据词频 生成词云')
	f = remove_stop_words(f)
	cut_text = ' '.join(jieba.cut(f, cut_all=False, HMM=True))
	wc = WordCloud(
        background_color='white',
		font_path="./SimHei.ttf",
		max_words=100,
		width=2000,
		height=1200,
	)
	print(cut_text)
	wordcloud = wc.generate(cut_text)
	# 写词云图片
	wordcloud.to_file("wordcloud.jpg")
	# 显示词云文件
	plt.imshow(wordcloud)
	plt.axis("off")
	plt.show()


# 设置歌单ID
playlist_id = '********'
[song_names, song_ids] = get_songs(playlist_id)

# 所有歌词
all_word = ''
# 获取每首歌歌词
for (song_id, song_name) in zip(song_ids, song_names):
	#筛选中文歌名
    if u'\u4e00'<= song_name<= '\u9fff':
        # 歌词 API URL
        lyric_url = 'http://music.163.com/api/song/lyric?os=pc&id=' + str(song_id) + '&lv=-1&kv=-1&tv=-1'
        lyric = get_song_lyric(headers, lyric_url)

        all_word = all_word + ' ' + lyric
        print(song_name)
    else:
        continue

# 根据词频，生成词云
create_word_cloud(all_word)