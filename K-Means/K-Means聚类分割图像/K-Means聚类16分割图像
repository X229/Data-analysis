#coding:utf-8
#使用K-Means对图像进行聚类，并显示聚类压缩后的图像
import numpy as np
import PIL.Image as image
from sklearn.cluster import KMeans
from sklearn import preprocessing
import matplotlib.image as mping
from skimage import color

#加载图像，并对数据进行规范化
def load_data(filePath):
    #读文件
    f=open(filePath,'rb')
    data=[]
    #得到图像的像素值
    img=image.open(f)
    #得到图像尺寸
    width,height=img.size
    for x in range(width):
        for y in range(height):
            #得到点(x,y)的RGB通道三个值
            c1,c2,c3,c4=img.getpixel((x,y))
            #自定义规范化,并生产矩阵
            data.append([(c1+1)/256.0,(c2+1)/256.0,(c3+1)/256.0])
    f.close()
    return np.mat(data),width,height

#加载图像，得到规范化的结果img，以及图像尺寸
img,width,height=load_data('./weixin_mark.png')

#用K-Means对图像进行16聚类
kmeans=KMeans(n_clusters=16)
kmeans.fit(img)
label=kmeans.predict(img)
#将图像聚类结果，转化成图像尺寸的矩阵
label=label.reshape(width,height)
#创建个新图像img，用来保存图像聚类的结果，并设置不同的灰度值
img=image.new("RGB",(width,height))
for x in range(width):
    for y in range(height):
        #根据类别设置图像颜色
        c1 = kmeans.cluster_centers_[label[x][y], 0]
        c2 = kmeans.cluster_centers_[label[x][y], 1]
        c3 = kmeans.cluster_centers_[label[x][y], 2]
        img.putpixel((x,y),(int(c1*256)-1,int(c2*256)-1,int(c3*256)-1))
img.save("weixin_mark16.jpg","JPEG")

'''
 [x,y]和[x][y]的区别???
 前者索引为一个数组，后者索引为int
'''